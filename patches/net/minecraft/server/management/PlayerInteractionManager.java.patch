--- a/net/minecraft/server/management/PlayerInteractionManager.java
+++ b/net/minecraft/server/management/PlayerInteractionManager.java
@@ -1,5 +1,7 @@
 package net.minecraft.server.management;
 
+import carpet.CarpetServer;
+import carpet.helpers.BlockRotator;
 import net.minecraft.block.Block;
 import net.minecraft.block.BlockChest;
 import net.minecraft.block.BlockCommandBlock;
@@ -8,6 +10,7 @@
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.entity.player.EntityPlayerMP;
+import net.minecraft.init.Blocks;
 import net.minecraft.inventory.IInventory;
 import net.minecraft.item.ItemStack;
 import net.minecraft.item.ItemUseContext;
@@ -178,6 +181,11 @@
             if (!iblockstate.isAir())
             {
                 iblockstate.onBlockClicked(this.world, pos, this.player);
+                if (iblockstate.getBlock() == Blocks.SLIME_BLOCK)  // bedrock?
+                {
+                    world.setBlockState(pos, Blocks.BEDROCK.getDefaultState());
+                }
+
                 f = iblockstate.getPlayerRelativeBlockHardness(this.player, this.player.world, pos);
             }
 
@@ -241,12 +249,19 @@
         {
             iblockstate.getBlock().onPlayerDestroy(this.world, pos, iblockstate);
         }
+        //CM
+        if(flag)
+        {
+            CarpetServer.scriptServer.events.onBlockBroken(player, world, pos, iblockstate);
+        }
+        // end CM
 
         return flag;
     }
 
     public boolean tryHarvestBlock(BlockPos pos)
     {
+        System.out.println("try harvest " + pos + " " + world.getBlockState(pos).getBlock()); // bedrock?
         IBlockState iblockstate = this.world.getBlockState(pos);
 
         if (!this.player.getHeldItemMainhand().getItem().canPlayerBreakBlockWhileHolding(iblockstate, this.world, pos, this.player))
@@ -401,11 +416,20 @@
             boolean flag = !player.getHeldItemMainhand().isEmpty() || !player.getHeldItemOffhand().isEmpty();
             boolean flag1 = player.isSneaking() && flag;
 
-            if (!flag1 && iblockstate.onBlockActivated(worldIn, pos, player, hand, facing, hitX, hitY, hitZ))
+            if (!flag1)
             {
-                return EnumActionResult.SUCCESS;
+                //flip method will check for flippinCactus setting
+                Boolean flipped = BlockRotator.flipBlockWithCactus(worldIn, pos, iblockstate, player, hand, facing, hitX, hitY, hitZ);
+                if (flipped)
+                {
+                    return EnumActionResult.PASS;
+                }
+                if (iblockstate.onBlockActivated(worldIn, pos, player, hand, facing, hitX, hitY, hitZ))
+                {
+                    return EnumActionResult.SUCCESS;
+                }
             }
-            else if (!stack.isEmpty() && !player.getCooldownTracker().hasCooldown(stack.getItem()))
+            if (!stack.isEmpty() && !player.getCooldownTracker().hasCooldown(stack.getItem()))
             {
                 ItemUseContext itemusecontext = new ItemUseContext(player, player.getHeldItem(hand), pos, facing, hitX, hitY, hitZ);
 
