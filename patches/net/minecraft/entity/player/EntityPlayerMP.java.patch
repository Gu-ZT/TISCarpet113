--- a/net/minecraft/entity/player/EntityPlayerMP.java
+++ b/net/minecraft/entity/player/EntityPlayerMP.java
@@ -1,7 +1,13 @@
 package net.minecraft.entity.player;
 
+import carpet.helpers.EntityPlayerActionPack;
+import carpet.logging.logHelpers.DamageReporter;
+import carpet.settings.CarpetSettings;
+import carpet.worldedit.CarpetWorldEditAccess;
+import carpet.worldedit.internal.ExtendedPlayerEntity;
 import com.google.common.collect.Lists;
 import com.mojang.authlib.GameProfile;
+import gca.GcaExtension;
 import io.netty.buffer.Unpooled;
 import java.util.Collection;
 import java.util.Iterator;
@@ -93,9 +99,7 @@
 import net.minecraft.util.ResourceLocation;
 import net.minecraft.util.SoundCategory;
 import net.minecraft.util.Util;
-import net.minecraft.util.math.BlockPos;
-import net.minecraft.util.math.MathHelper;
-import net.minecraft.util.math.Vec3d;
+import net.minecraft.util.math.*;
 import net.minecraft.util.text.ChatType;
 import net.minecraft.util.text.ITextComponent;
 import net.minecraft.util.text.TextComponentString;
@@ -112,7 +116,7 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
-public class EntityPlayerMP extends EntityPlayer implements IContainerListener
+public class EntityPlayerMP extends EntityPlayer implements IContainerListener, /* CM worldedit */ ExtendedPlayerEntity
 {
     private static final Logger LOGGER = LogManager.getLogger();
     private String language = "en_US";
@@ -151,6 +155,13 @@
     public int ping;
     public boolean queuedEndExit;
 
+    //CM
+    public EntityPlayerActionPack actionPack;
+
+    // TISCM clientSettingsLostOnRespawnFix
+    @Nullable
+    private CPacketClientSettings lastCPacketClientSettings;
+
     public EntityPlayerMP(MinecraftServer server, WorldServer worldIn, GameProfile profile, PlayerInteractionManager interactionManagerIn)
     {
         super(worldIn, profile);
@@ -162,6 +173,9 @@
         this.advancements = server.getPlayerList().getPlayerAdvancements(this);
         this.stepHeight = 1.0F;
         this.func_205734_a(worldIn);
+
+        //CM
+        this.actionPack = new EntityPlayerActionPack(this);
     }
 
     private void func_205734_a(WorldServer p_205734_1_)
@@ -311,8 +325,15 @@
     public void addSelfToInternalCraftingInventory()
     {
         this.openContainer.addListener(this);
+        if (CarpetSettings.fakePlayerResident && this.getServer() != null && this.getServer().isSinglePlayer() && isSingleplayerOwner(this.getGameProfile())) {
+            GcaExtension.onServerStart(this.getServer());
+        }
     }
 
+    public boolean isSingleplayerOwner(GameProfile profile) {
+        return this.getServer() !=null && profile.getName().equalsIgnoreCase(this.getServer().getServerOwner());
+    }
+
     public void sendEnterCombat()
     {
         super.sendEnterCombat();
@@ -337,6 +358,9 @@
 
     public void tick()
     {
+        //CM
+        actionPack.onUpdate();
+        //CM end
         this.interactionManager.tick();
         --this.respawnInvulnerabilityTicks;
 
@@ -616,6 +640,7 @@
 
             if (!flag && this.respawnInvulnerabilityTicks > 0 && source != DamageSource.OUT_OF_WORLD)
             {
+                DamageReporter.modify_damage(this, source, amount, 0.0F, "respawn protection");
                 return false;
             }
             else
@@ -626,6 +651,7 @@
 
                     if (entity instanceof EntityPlayer && !this.canAttackPlayer((EntityPlayer)entity))
                     {
+                        DamageReporter.modify_damage(this, source, amount, 0.0F, "PVP disabled");
                         return false;
                     }
 
@@ -636,6 +662,7 @@
 
                         if (entity1 instanceof EntityPlayer && !this.canAttackPlayer((EntityPlayer)entity1))
                         {
+                            DamageReporter.modify_damage(this, source, amount, 0.0F, "PVP disabled (projectile)");
                             return false;
                         }
                     }
@@ -1169,6 +1196,15 @@
         this.enteredNetherPosition = that.enteredNetherPosition;
         this.setLeftShoulderEntity(that.getLeftShoulderEntity());
         this.setRightShoulderEntity(that.getRightShoulderEntity());
+
+        // TISCM clientSettingsLostOnRespawnFix
+        if (CarpetSettings.clientSettingsLostOnRespawnFix)
+        {
+            if (that.lastCPacketClientSettings != null)
+            {
+                this.handleClientSettings(that.lastCPacketClientSettings);
+            }
+        }
     }
 
     protected void onNewPotionEffect(PotionEffect id)
@@ -1299,6 +1335,12 @@
         this.chatColours = packetIn.isColorsEnabled();
         this.getDataManager().set(PLAYER_MODEL_FLAG, (byte)packetIn.getModelPartFlags());
         this.getDataManager().set(MAIN_HAND, (byte)(packetIn.getMainHand() == EnumHandSide.LEFT ? 0 : 1));
+
+        // TISCM clientSettingsLostOnRespawnFix
+        if (CarpetSettings.clientSettingsLostOnRespawnFix)
+        {
+            this.lastCPacketClientSettings = packetIn;
+        }
     }
 
     public EntityPlayer.EnumChatVisibility getChatVisibility()
@@ -1413,6 +1455,18 @@
 
     public void swingArm(EnumHand hand)
     {
+        // CM worldedit
+        if (hand == EnumHand.MAIN_HAND)
+        {
+            float reach = this.isCreative() ? 5.0F : 4.5F;
+            RayTraceResult hitResult = this.rayTrace(reach, 1.0F, RayTraceFluidMode.NEVER);
+            if (hitResult != null && hitResult.type == RayTraceResult.Type.MISS)
+            {
+                CarpetWorldEditAccess.onLeftClickAir(this);
+            }
+        }
+        // CM worldedit ends
+
         super.swingArm(hand);
         this.resetCooldown();
     }
@@ -1483,4 +1537,10 @@
             this.server.getPlayerList().sendInventory(this);
         }
     }
+
+    // CM worldedit
+    @Override
+    public String getLanguage() {
+        return language;
+    }
 }
