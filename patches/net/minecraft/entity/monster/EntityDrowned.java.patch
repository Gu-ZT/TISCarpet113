--- a/net/minecraft/entity/monster/EntityDrowned.java
+++ b/net/minecraft/entity/monster/EntityDrowned.java
@@ -3,6 +3,8 @@
 import java.util.Random;
 import java.util.function.Predicate;
 import javax.annotation.Nullable;
+
+import carpet.settings.CarpetSettings;
 import net.minecraft.entity.EntityCreature;
 import net.minecraft.entity.EntityLivingBase;
 import net.minecraft.entity.EntityType;
@@ -254,18 +256,40 @@
         }
     }
 
+    // TISCM drownedNavigatorMemoryLeakFix
+    private void setNavigator(PathNavigate navigator)
+    {
+        if (CarpetSettings.drownedNavigatorMemoryLeakFix)
+        {
+            this.world.getPathListener().onEntityRemoved(this);
+            this.navigator = navigator;
+            this.world.getPathListener().onEntityAdded(this);
+        }
+        else
+        {
+            // why u choose this vanilla buggy behavior xd
+            this.navigator = navigator;
+        }
+    }
+
     public void updateSwimming()
     {
         if (!this.world.isRemote)
         {
             if (this.isServerWorld() && this.isInWater() && this.func_204715_dF())
             {
-                this.navigator = this.waterNavigator;
+                // TISCM drownedNavigatorMemoryLeakFix
+//                this.navigator = this.waterNavigator;
+                this.setNavigator(this.waterNavigator);
+
                 this.setSwimming(true);
             }
             else
             {
-                this.navigator = this.groundNavigator;
+                // TISCM drownedNavigatorMemoryLeakFix
+//                this.navigator = this.groundNavigator;
+                this.setNavigator(this.groundNavigator);
+
                 this.setSwimming(false);
             }
         }
